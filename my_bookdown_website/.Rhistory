setwd("~/MASTERS/ReproDat")
library(bookdown)
install.packages(metafor)
library(metafor)
# Examples 1 ----
library(DBI)
dragons_db <-dbconnect(drv=RSQLite::SQLite(), "../../../ReproDat/sqlite/dragons.db")
dragons_db <-dbConnect(drv=RSQLite::SQLite(), "../../../ReproDat/sqlite/dragons.db")
dragons_db <-dbConnect(drv=RSQLite::SQLite(), "../../../MASTERS/ReproDat/sqlite/dragons.db")
library(DBI)
library(RSQLite)
library(dplyr)
library(ggplot2)
```
dragons_db<-dbConnect(RSQLite::SQLite(), "dragons.db")
dragons_db<-dbConnect(RSQLite::SQLite(), "dragons.db")
# load packages ####
library(RSQLite)
library (DBI)
# establish a connection with the database ####
dragons_db <-dbConnect(RSQLite::SQLite(), "dragons.db")
#sending queries to the DB ####
dragons <- dbGetQuery(conn=dragons_db, statement = "select * from dragons;")
dragons_db <- dbConnect(RSQLite::SQLite(), "../../../MASTERS/ReproDat/sqlite/dragons.db")
setwd("~/MASTERS/Directed Study")
# load metafor package
library(metafor)
# read in data from data_bcg.txt
dat <- read.table("data_bcg.txt", header=TRUE)
setwd("~/MASTERS/Directed Study/workshop_2023_ma_esmarconf-master")
# load metafor package
library(metafor)
# read in data from data_bcg.txt
dat <- read.table("data_bcg.txt", header=TRUE)
# examine data
dat
# we might also need these packages
install.packages("lme4")
install.packages("brms")
install.packages("brms")
install.packages("bayesmeta")
install.packages("metaBMA")
# also install the clubSandwich package
install.packages("clubSandwich")
library(clubSandwich)
library(lme4)
library(bayesmeta)
library(metaBMA)
# examine data
dat
# spreadsheet-like view
View(dat)
# or use the built-in dataset (called 'dat.bcg')
# copy BCG vaccine data to 'dat'
dat <- dat.bcg
dat
# compute log risk ratios and corresponding sampling variances
dat <- escalc(measure="RR", ai=tpos, bi=tneg,
ci=cpos, di=cneg, data=dat)
dat
# check the calculation of the log risk rations for Hart & Sutherland (1977)
62 / ( 62 + 13536) # risk in the treated (vaccinated) group
248 / (248 + 12619) # risk in the control (non-vaccinated) group
(62 / (62 + 13536)) / (248 / (248 + 12619)) # risk ratio
log((62 / (62 + 13536)) / (248 / (248 + 12619))) # log risk ratio
# forest plot (a very basic one)
forest(dat$yi, dat$vi)
with(dat, forest(yi, vi))
# a slightly nicer one
with(dat, forest(yi, vi, slab=paste(author, year, sep=", "), header=TRUE))
# fit equal-effects model
res <- rma(yi, vi, method="EE", data=dat)
res
# double-check the computation of the estimate
with(dat, sum(1/vi * yi) / sum(1/vi))
weighted.mean(dat$yi, 1/dat$vi)
# or round results to 2 digits
print(res, digits=2)
# back-transform results to the risk ratio scale
predict(res, transf=exp, digits=2)
# forest plot with results from the model
forest(res)
# fit random-effects model (using the DerSimonian-Laird estimator for tau^2)
res <- rma(yi, vi, method="DL", data=dat)
res
# fit random-effects model (the default is to use REML estimation)
rma(yi, vi, data=dat)
# or round results to 2 digits
print(res, digits=2)
# estimated average risk ratio (and 95% CI/PI)
predict(res, transf=exp, digits=2)
# forest plot with results from the model
forest(res)
# a nicer forest plot
res <- rma(yi, vi, data=dat, slab=paste(author, year, sep=", "))
forest(res, xlim=c(-16,6), header="Author(s) and Year", addpred=TRUE,
ilab=cbind(tpos, tneg, cpos, cneg),
ilab.xpos=c(-9.5,-8,-6,-4.5), cex=.90)
par(cex=.90, font=2)
text(c(-9.5,-8,-6,-4.5), 15, c("TB+", "TB-", "TB+", "TB-"))
text(c(-8.75,-5.25),     16, c("Vaccinated", "Control"))
res <- rma(yi, vi, data=dat, slab=paste(author, year, sep=", "))
forest(res, xlim=c(-16,6), atransf=exp, at=log(c(.05,.25,1,4)),
header="Author(s) and Year", addpred=TRUE,
ilab=cbind(tpos, tneg, cpos, cneg),
ilab.xpos=c(-9.5,-8,-6,-4.5), cex=.90)
par(cex=.90, font=2)
text(c(-9.5,-8,-6,-4.5), 15, c("TB+", "TB-", "TB+", "TB-"))
text(c(-8.75,-5.25),     16, c("Vaccinated", "Control"))
# computation of I^2
res <- rma(yi, vi, data=dat)
res
k <- res$k
wi <- 1/res$vi
# think of 'vt' as a way to quantify the 'typical' sampling variance
vt <- (k-1) * sum(wi) / (sum(wi)^2 - sum(wi^2))
round(100 * res$tau2 / (res$tau2 + vt), digits=2)
# confidence interval for tau^2 and I^2
confint(res)
# for a description of the dataset, see:
help(dat.bangertdrowns2004)
# copy data to 'dat'
dat <- dat.bangertdrowns2004
dat
escalc(measure="SMD", m1i=342, sd1i=68, n1i=27,
m2i=303, sd2i=75, n2i=23)
# fit a random-effects model (use either the DL or REML estimator)
rem <- rma(yi, vi, method="DL", data=dat)
rem
# obtain the 95% prediction interval
predict(rem, transf=exp, digits=2)
predict(rem, transf=exp)
# fit an equal-effects model (as in Bangert-Drowns et al., 2004)
rem2 <- rma(yi, vi, method="EE", digits=2, data=dat)
rem2
predict(rem2, transf=exp)
hist(dat$yi, breaks=seq(-1.5, 2, by=0.25), xlab="Standardized Mean Difference",
main="Histogram of the SMD Values")
abline(v=0, lwd=3)
# fit mixed-effects meta-regression models with the following moderators (one
# at a time): grade (treated categorically!), length (continuously), wic,
# feedback, info, pers, imag, and meta
rma(yi, vi, mods = ~ grade, data=dat, method="DL", subset=-3)
rma(yi, vi, mods = ~ length, data=dat, method="DL", subset=-6)
rma(yi, vi, mods = ~ wic, data=dat, method="DL", subset=-c(3,6))
rma(yi, vi, mods = ~ length, data=dat, method="DL", subset=-3)
# fit mixed-effects meta-regression models with the following moderators (one
# at a time): grade (treated categorically!), length (continuously), wic,
# feedback, info, pers, imag, and meta
rma(yi, vi, mods = ~ grade, data=dat, method="DL", subset=-3)
View(dat)
rma(yi, vi, mods = ~ length, data=dat, method="DL", subset=-3)
rma(yi, vi, mods = ~ pers, data=dat, method="DL", subset=-3)
rma(yi, vi, mods = ~ meta, data=dat, method="DL", subset=-3)
# fit mixed-effects meta-regression models with the following moderators (one
# at a time): grade (treated categorically!), length (continuously), wic,
# feedback, info, pers, imag, and meta
rma(yi, vi, mods = ~ grade, data=dat, method="DL", subset=-3)
rma(yi, vi, mods = ~ wic, data=dat, method="DL", subset=-3)
rma(yi, vi, mods = ~ feedback, data=dat, method="DL", subset=-3)
rma(yi, vi, mods = ~ info, data=dat, method="DL", subset=-3)
rma(yi, vi, mods = ~ pers, data=dat, method="DL", subset=-3)
rma(yi, vi, mods = ~ imag, data=dat, method="DL", subset=-3)
rma(yi, vi, mods = ~ meta, data=dat, method="DL", subset=-3)
# fit mixed-effects meta-regression models with the following moderators (one
# at a time): grade (treated categorically!), length (continuously), wic,
# feedback, info, pers, imag, and meta
rma(yi, vi, mods = ~ grade, data=dat, method="DL", subset=-3)
rma(yi, vi, mods = ~ meta, data=dat, method="DL", subset=-3)
# fit a random-effects model (use either the DL or REML estimator)
rem <- rma(yi, vi, data=dat)
rem
# obtain a 95% CIs for tau^2 and I^2
confint(rem)
# fit an equal-effects model (as in Bangert-Drowns et al., 2004)
rem2 <- rma(yi, vi, method="EE", digits=2, data=dat)
rem2
abline(v=0, lwd=3)
hist(dat$yi, breaks=seq(-1.5, 2, by=0.25), xlab="Standardized Mean Difference",
main="Histogram of the SMD Values")
abline(v=0, lwd=3)
# obtain the 95% prediction interval
predict(rem, digits=2)
